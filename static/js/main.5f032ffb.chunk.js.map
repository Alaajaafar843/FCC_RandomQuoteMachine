{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colors","quotes","quote","author","App","props","state","background","getQuote","bind","randomQuote","Math","floor","random","length","randombkgcolor","this","setState","id","style","backgroundColor","class","icon","color","href","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAOMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAS,CACb,CACEC,MAAQ,wDACRC,OAAS,kCAEX,CACED,MAAQ,uPACRC,OAAS,gBAEX,CACED,MAAQ,6OACRC,OAAS,iCAEX,CACED,MAAQ,6SACRC,OAAS,UAEX,CACED,MAAQ,4DACRC,OAAS,oCAEX,CACED,MAAQ,sJACRC,OAAS,mBA2DEC,E,kDAlDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CAEXC,WAAaP,EAAO,GACpBE,MAASD,EAAO,GAAGC,MACnBC,OAASF,EAAO,GAAGE,QAGrB,EAAKK,SAAW,EAAKA,SAASC,KAAd,gBAVA,E,4CAalB,WAEE,IAAMC,EAAcT,EAAOU,KAAKC,MAAMD,KAAKE,SAAWZ,EAAOa,SACvDC,EAAiBf,EAAOW,KAAKC,MAAMD,KAAKE,SAASb,EAAOc,SAE9DE,KAAKC,SAAS,CACZV,WAAYQ,EACZb,MAAQQ,EAAYR,MACpBC,OAASO,EAAYP,W,oBAMzB,WAEE,OACE,sBAAKe,GAAG,UAAUC,MAAO,CAACC,gBAAgBJ,KAAKV,MAAMC,YAArD,UACE,cAAC,IAAD,IACA,sBAAKW,GAAG,YAAR,UACE,sBAAKG,MAAM,aAAX,UACE,cAAC,IAAD,CAAiBC,KAAK,eACtB,qBAAKJ,GAAG,OAAOC,MAAO,CAACI,MAAMP,KAAKV,MAAMC,YAAxC,SAAsDS,KAAKV,MAAMJ,WAEnE,qBAAKmB,MAAM,eAAX,SACE,sBAAKH,GAAG,SAASC,MAAO,CAACI,MAAMP,KAAKV,MAAMC,YAA1C,cAAyDS,KAAKV,MAAMH,YAEtE,sBAAKkB,MAAM,UAAX,UACE,mBAAGA,MAAM,SAASH,GAAG,cAAcC,MAAO,CAACC,gBAAgBJ,KAAKV,MAAMC,YAAaiB,KAAK,2BAAxF,mBACF,wBAAQN,GAAG,YAAYG,MAAM,SAASI,QAAST,KAAKR,SAAUW,MAAO,CAACC,gBAAgBJ,KAAKV,MAAMC,YAAjG,oC,GA5CQmB,IAAMC,WCxCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f032ffb.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport ReactFCCtest from 'react-fcctest';\nimport  \"./App.css\";\n\n\n\nconst colors = [\n  '#16a085',\n  '#27ae60',\n  '#2c3e50',\n  '#f39c12',\n  '#e74c3c',\n  '#9b59b6',\n  '#FB6964',\n  '#342224',\n  '#472E32',\n  '#BDBB99',\n  '#77B1A9',\n  '#73A857'\n];\n\nconst quotes = [\n  {\n    quote : \"You are the shuckiest shuck faced shuck in the world!\",\n    author : \"James Dashner, The Maze Runner\"\n  },\n  {\n    quote : \"I'm unpredictable, I never know where I'm going until I get there, I'm so random, I'm always growing, learning, changing, I'm never the same person twice. But one thing you can be sure of about me; is I will always do exactly what I want to do.\",\n    author : \"C. JoyBell C\"\n  },\n  {\n    quote : \"That proves you are unusual,' returned the Scarecrow; 'and I am convinced that the only people worthy of consideration in this world are the unusual ones. For the common folks are like the leaves of a tree, and live and die unnoticed.\",\n    author : \"L. Frank Baum, The Land of Oz\"\n  },\n  {\n    quote : \"But that was life: Nobody got a guided tour to their own theme park. You had to hop on the rides as they presented themselves, never knowing whether you would like the one you were in line for...or if the bastard was going to make you throw up your corn dog and your cotton candy all over the place\",\n    author : \"UNKOWN\"\n  },\n  {\n    quote : \"Her name badge read: Hello! My name is DIE, DEMIGOD SCUM!\",\n    author : \"Rick Riordan, The Son of Neptune\"\n  },\n  {\n    quote : 'A musician must make music, an artist must paint, a poet must write, if he is to be ultimately at peace with himself. What a man can be, he must be',\n    author : \"Abraham Maslow\"\n  }\n];\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n\n      background : colors[2], \n      quote :  quotes[2].quote,\n      author : quotes[2].author\n\n    }\n    this.getQuote = this.getQuote.bind(this);\n  }\n\n  getQuote() {\n\n    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n    const randombkgcolor = colors[Math.floor(Math.random()*colors.length)];\n\n    this.setState({\n      background: randombkgcolor,\n      quote : randomQuote.quote,\n      author : randomQuote.author\n\n    })\n\n  }\n\n  render() {\n\n    return (\n      <div id=\"wrapper\" style={{backgroundColor:this.state.background}}>\n        <ReactFCCtest />\n        <div id=\"quote-box\">\n          <div class='quote-text'>\n            <FontAwesomeIcon icon=\"quote-left\" />\n            <div id=\"text\" style={{color:this.state.background}}>{this.state.quote}</div>\n          </div>\n          <div class=\"quote-author\">\n            <div id=\"author\" style={{color:this.state.background}}>-{this.state.author}</div>\n          </div>\n          <div class=\"buttons\">\n            <a class='button' id=\"tweet-quote\" style={{backgroundColor:this.state.background}} href=\"twitter.com/intent/tweet\">Tweet</a>\n          <button id=\"new-quote\" class=\"button\" onClick={this.getQuote} style={{backgroundColor:this.state.background}}>New Quote</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}